{"meta":{"title":"YoungHeaKim's Blog","subtitle":null,"description":null,"author":null,"url":"http://yoursite.com"},"pages":[],"posts":[{"title":"짝수와 홀수(JAVASCRIPT)","slug":"js(EvenOrOdd)","date":"2017-08-16T09:54:10.000Z","updated":"2017-09-17T10:19:20.000Z","comments":true,"path":"2017/08/16/js(EvenOrOdd)/","link":"","permalink":"http://yoursite.com/2017/08/16/js(EvenOrOdd)/","excerpt":"","text":"짝수와 홀수문제evenOrOdd 함수는 정수 num을 매개변수로 받는다. num은 1이상의 정수이며, num이 음수인 경우는 없다. num이 짝수일 경우 ‘Even’을 반환하고 홀수인 경우 ‘Odd’를 반환하도록 evenOrOdd에 코드를 작성하라. 풀이(if문)12345678910111213// If문function EvenOrOdd(num) &#123; if (num % 2 == 0) &#123; // num을 짝수인지 조건을 써준다. return 'Even'; &#125; else &#123; // 그렇지않은 경우 홀수인지를 써준다. return 'Odd'; &#125;&#125; console.log(EvenOrOdd(0)); // evenconsole.log(EvenOrOdd(2)); // evenconsole.log(EvenOrOdd(3)); // oddconsole.log(EvenOrOdd(15)); // odd 풀이(3항연산자)12345678// 3항 연산자function EvenOrOdd(num) &#123; return (num % 2 == 0) ? \"Even\" : \"Odd\"; // num이 짝수인지 홀수인지 확인하는 조건을 써주고 삼항연산문을 사용하여 값을 정한후 값을 출력한다.&#125; console.log(EvenOrOdd(0)); // evenconsole.log(EvenOrOdd(2)); // evenconsole.log(EvenOrOdd(3)); // oddconsole.log(EvenOrOdd(15)); // odd 문제를 풀며 배운점 if문보다 3항연산자가 더 짧은 코드를 만들 수 있다다는 것을 배웠다.","categories":[{"name":"알고리즘(Algorithm)","slug":"알고리즘-Algorithm","permalink":"http://yoursite.com/categories/알고리즘-Algorithm/"},{"name":"짝수와 홀수","slug":"알고리즘-Algorithm/짝수와-홀수","permalink":"http://yoursite.com/categories/알고리즘-Algorithm/짝수와-홀수/"}],"tags":[{"name":"JAVASCRIPT","slug":"JAVASCRIPT","permalink":"http://yoursite.com/tags/JAVASCRIPT/"},{"name":"알고리즘","slug":"알고리즘","permalink":"http://yoursite.com/tags/알고리즘/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"원하는 숫자 찾기(JAVASCRIPT)","slug":"js(searchEight)","date":"2017-08-16T09:54:10.000Z","updated":"2017-09-17T10:24:39.000Z","comments":true,"path":"2017/08/16/js(searchEight)/","link":"","permalink":"http://yoursite.com/2017/08/16/js(searchEight)/","excerpt":"","text":"1 ~ 10,000의 숫자 중 8이 등장하는 횟수 구하기문제1부터 10,000까지 8이라는 숫자가 총 몇번 나오는가? 이를 구하는 함수를 완성하라. 8이 포함되어 있는 숫자의 갯수를 카운팅 하는 것이 아니라 8이라는 숫자를 모두 카운팅 해야 한다. (※ 예를들어 8808은 3, 8888은 4로 카운팅 해야 함) 풀이1234567891011121314151617181920212223242526function searchEight(num) &#123; // 변수의 선언위치가 중요하다. 만약 for문안에 count를 선언해주면 for문이 실행 될 때마다 count=0;으로 초기화가 되기때문에 for문 밖에 써주는 것이 중요하다. var count = 0; // 1부터 10000까지 확인을 해야해서 반복문 사용 for (var numOrd = 1; numOrd &lt;= num; numOrd++)&#123; // num은 숫자형이기 때문에 문자열로 바꿔주고 str은 배열이 아님으로 split메소드를 사용하여 배열로 변화를 줘야함. var numArr = numOrd.toString().split(''); // i는 0부터 10000까지 도는 숫자에서 8을 검색하는 for문을 만듬 for (var i = 0; i &lt; numArr.length; i++)&#123; // numArr[i]를 사용하여 각 자리의 값을 8인지 비교 , 이때 ===을 사용하면 undefined출력(이유는 numArr가 위에서 문자열로 바꿔주었기 때문) if(numArr[i] == 8)&#123; // 여기서 8이 나올때마다 1씩 증가시켜주는 연산식을 사용한다. 밑의 경우 count+1을 count에 저장한다는 뜻의 연산자인 +=을 사용하였다. count += 1; &#125; &#125; &#125; return count;&#125;console.log(searchEight(10000)); // 4000console.log(searchEight(10088)); // 4018console.log(searchEight(50000)); // 20000 문제를 풀며 배운점 count문을 이해해야 하는 풀 수 있는 문제로 값을 초기화 시키고 저장하는 방법을 알아야한다.","categories":[{"name":"알고리즘(Algorithm)","slug":"알고리즘-Algorithm","permalink":"http://yoursite.com/categories/알고리즘-Algorithm/"},{"name":"원하는 숫자 찾기","slug":"알고리즘-Algorithm/원하는-숫자-찾기","permalink":"http://yoursite.com/categories/알고리즘-Algorithm/원하는-숫자-찾기/"}],"tags":[{"name":"JAVASCRIPT","slug":"JAVASCRIPT","permalink":"http://yoursite.com/tags/JAVASCRIPT/"},{"name":"알고리즘","slug":"알고리즘","permalink":"http://yoursite.com/tags/알고리즘/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"최단 거리 1차원 점의 쌍 구하기(JAVASCRIPT)","slug":"js(daum)","date":"2017-08-15T09:54:10.000Z","updated":"2017-09-17T10:14:23.000Z","comments":true,"path":"2017/08/15/js(daum)/","link":"","permalink":"http://yoursite.com/2017/08/15/js(daum)/","excerpt":"","text":"최단 거리 1차원 점의 쌍 구하기문제1차원의 점들이 주어졌을 때, 그 중 가장 거리가 짧은 것(들)의 쌍을 배열로 반환하는 함수를 작성하라. (단 점들의 배열은 모두 정렬되어있다고 가정한다.) 예를들어 [1, 3, 4, 8, 13, 17, 20, 23, 24]이 주어졌다면, 결과값은 [[3, 4], [23, 24]]가 될 것이다. 풀이1234567891011121314151617181920212223242526272829303132333435function findMinDistance(array)&#123; // return용 배열(최단거리) var shortests = []; // 두점간의 최단거리 var minDistance = Number.MAX_VALUE; // reduce를 사용하여 배열에서 자기자신과 바로 전 값을 비교하여 준다. array.reduce(function (pre, cur) &#123; // distance라는 변수를 선언해주어 현재값과 전값을 빼주어 그 차이를 저장을 해준다. var distance = Math.abs(pre - cur); // 두 점간의 거리가 지금까지 조사된 최단 거리(이때 위에서 저장한 distance의 값과 다시 재할당된 minDistance의 값을 비교해 준다.) if (distance === minDistance)&#123; // 최단 거리가 점점 짧아지는데 제일 짧은 distance와 갔다면 push메소드를 사용하여 조건을 만족하는 두 수를 배열의 형태로 만들어 뒤에 저장시켜준다. shortests.push([pre, cur]); &#125; // 두 점간의 거리가 최단 거리이면 if (distance &lt; minDistance)&#123; // distance값과 minDistance값을 비교하여 그것보다 작으면 mindistance에 세로 할당하여 넣어준다. minDistance = distance ; // shortests에 새로 배열의 형태로 값을 할당한다. shortests = [[pre, cur]]; &#125; return cur; &#125;); return shortests; &#125;// 1차원 점의 배열var array = [1, 3, 4, 8, 13, 17, 20, 23, 24];console.log(findMinDistance(array)); // [[3, 4], [23, 24]]var array= [-5, -4, 1, 2, 3, 20, 23, 24];console.log(findMinDistance(array)); // [ [ -5, -4 ], [ 1, 2 ], [ 2, 3 ], [ 23, 24 ] ] 문제를 풀며 느낀점 Number의 메소드들을 사용하는 법을 배웠다. 새로운 배열을 만들어 배열안에 배열을 넣는 법등을 이 문제를 통해 알게 되었다.","categories":[{"name":"알고리즘(Algorithm)","slug":"알고리즘-Algorithm","permalink":"http://yoursite.com/categories/알고리즘-Algorithm/"},{"name":"최단 거리 1차원 점의 쌍 구하기","slug":"알고리즘-Algorithm/최단-거리-1차원-점의-쌍-구하기","permalink":"http://yoursite.com/categories/알고리즘-Algorithm/최단-거리-1차원-점의-쌍-구하기/"}],"tags":[{"name":"JAVASCRIPT","slug":"JAVASCRIPT","permalink":"http://yoursite.com/tags/JAVASCRIPT/"},{"name":"알고리즘","slug":"알고리즘","permalink":"http://yoursite.com/tags/알고리즘/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"CheckPalindrom(JAVASCRIPT)","slug":"js(checkPalindrom)","date":"2017-08-14T09:54:10.000Z","updated":"2017-09-17T10:10:49.000Z","comments":true,"path":"2017/08/14/js(checkPalindrom)/","link":"","permalink":"http://yoursite.com/2017/08/14/js(checkPalindrom)/","excerpt":"","text":"CheckPalindrom문제단어를 거꾸로해도 거꾸로 하지 않은 단어와 같은 단어인지 체크해주어서 맞으면 true를 반환하고 틀리면 false를 반환하여라. 풀이(1번)12345678910111213141516171819202122function checkPalindrom(str)&#123; // 단어를 체크해준다. var strReverse = str .split('').reverse().join(''); // strReverse를 선언해주어 역문자열을 저장한다. // .split('') -&gt; 단어를 하나씩 나누어 배열로 담아주어야 한다. // .split('').reverse() -&gt; 배열로 담아놓은 단어를 뒤집어 준다. // .split('').reverse().join('') -&gt; 뒤집어준 단어들을 다시 문자열로 변환시켜준다. if(str == strReverse) &#123; // 위에서 선언한 역문자열과 문자열을 같은지 체크해주는 조건문을 만든다. if (str.length == 1)&#123; //한글자 이상이어야 true를 반환하는 조건문을 생성한다. return(false); &#125; else &#123; return (true); &#125; &#125; else &#123; return (false); &#125;&#125;console.log(checkPalindrom('dad')); //trueconsole.log(checkPalindrom('mom')); //trueconsole.log(checkPalindrom('palindrom')); //falseconsole.log(checkPalindrom('s')); //true 풀이(2번)12345678function checkPalindrom(str)&#123; return str === str.split('').reverse().join('');&#125;console.log(checkPalindrom('dad')); //trueconsole.log(checkPalindrom('mom')); //trueconsole.log(checkPalindrom('palindrom')); //falseconsole.log(checkPalindrom('s')); //true 문제를 풀며 배운점 문자열의 메소드들을 사용하여 보았고 배열을 만들고 다시 문자열로 합쳐주는 메소드등을 사용할 수 있다는 점을 배웠다. 더 간결하게 코드를 만들 수 있다는 것을 배웠다.","categories":[{"name":"알고리즘(Algorithm)","slug":"알고리즘-Algorithm","permalink":"http://yoursite.com/categories/알고리즘-Algorithm/"},{"name":"CheckPalindrom","slug":"알고리즘-Algorithm/CheckPalindrom","permalink":"http://yoursite.com/categories/알고리즘-Algorithm/CheckPalindrom/"}],"tags":[{"name":"JAVASCRIPT","slug":"JAVASCRIPT","permalink":"http://yoursite.com/tags/JAVASCRIPT/"},{"name":"알고리즘","slug":"알고리즘","permalink":"http://yoursite.com/tags/알고리즘/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"날짜의 요일 찾기(JAVASCRIPT)","slug":"ja(day)","date":"2017-08-09T09:54:10.000Z","updated":"2017-09-17T10:05:18.000Z","comments":true,"path":"2017/08/09/ja(day)/","link":"","permalink":"http://yoursite.com/2017/08/09/ja(day)/","excerpt":"","text":"날짜의 요일 찾기아무 연도와 날짜를 입력하면 그 날의 요일을 찾아주는 알고리즘 문제이다. 1234567891011function getDayName(a,b)&#123; var today = new Date(2016, a-1, b); var dayNames = ['(SUN)', '(MON)', '(TUE)', '(WED)', '(THU)', '(FRI)', '(SAT)']; var day = dayNames[today.getDay()]; return day;&#125;console.log(getDayName(2,7)); // (SUN)console.log(getDayName(5,24)); // (TUE)console.log(getDayName(7,30)); // (SAT)console.log(getDayName(10,04)); // (TUE) 알고리즘 문제를 풀며 배운점 Date메소드를 사용하여 날짜를 찾는 것 getDay()메소드 사용법","categories":[{"name":"알고리즘(Algorithm)","slug":"알고리즘-Algorithm","permalink":"http://yoursite.com/categories/알고리즘-Algorithm/"},{"name":"요일 찾기","slug":"알고리즘-Algorithm/요일-찾기","permalink":"http://yoursite.com/categories/알고리즘-Algorithm/요일-찾기/"}],"tags":[{"name":"JAVASCRIPT","slug":"JAVASCRIPT","permalink":"http://yoursite.com/tags/JAVASCRIPT/"},{"name":"알고리즘","slug":"알고리즘","permalink":"http://yoursite.com/tags/알고리즘/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]},{"title":"NumPY(JAVASCRIPT)","slug":"js(string)","date":"2017-08-09T09:54:10.000Z","updated":"2017-09-17T10:05:42.000Z","comments":true,"path":"2017/08/09/js(string)/","link":"","permalink":"http://yoursite.com/2017/08/09/js(string)/","excerpt":"","text":"NumPY문제numPY함수는 대문자와 소문자가 섞여있는 문자열 s를 매개변수로 입력받는다. 대소문자를 구별하지 않으며 s에 ‘p’의 개수와 ‘y’의 개수를 비교해 같으면 true, 다르면 false를 리턴하도록 함수를 완성하라. ‘p’, ‘y’ 모두 하나도 없는 경우는 항상 true를 리턴한다. 예를들어 s가 ‘pPoooyY’면 true를 리턴하고 ‘Pyy’라면 false를 리턴한다. 풀이(for문)1234567891011121314151617181920//for문function numPY(s) &#123; var cntP = 0; var cntY = 0; s = s ? s : '' ; var lowerCaseStr = s.toLowerCase(); for(var i=0; i &lt; lowerCaseStr.length; i++)&#123; // 자바스크립트는 컴파일 시점에 에러 검출이 안된다. 실행이 될때 에러가 검출이 된다. if(lowerCaseStr[i] === 'p') cntP++; if(lowerCaseStr[i] === 'y') cntY++; &#125; return (cntP === cntY);&#125;console.log(numPY('pPoooyY')); // trueconsole.log(numPY('Pyy')); // falseconsole.log(numPY('ab')); // trueconsole.log(numPY('')); // trueconsole.log(numPY()); // true 풀이(정규표현식)123456789101112// 정규표현식function numPY(s) &#123; s = s ? s : ''; // return (s.match(/p/gi).length === s.match(/y/gi).length); return (s.match(/p/gi) ? s.match(/p/gi).length : 0) === (s.match(/y/gi) ? s.match(/y/gi).length : 0); &#125;console.log(numPY('pPoooyY')); // trueconsole.log(numPY('Pyy')); // falseconsole.log(numPY('ab')); // trueconsole.log(numPY('')); // trueconsole.log(numPY()); // true 문제를 풀며 배운점 for문을 사용하는 법을 알았다. 정규표현식을 사용하여 만들어 보았다. 3항연산문을 사용하여 보았다.","categories":[{"name":"알고리즘(Algorithm)","slug":"알고리즘-Algorithm","permalink":"http://yoursite.com/categories/알고리즘-Algorithm/"},{"name":"NumPY","slug":"알고리즘-Algorithm/NumPY","permalink":"http://yoursite.com/categories/알고리즘-Algorithm/NumPY/"}],"tags":[{"name":"JAVASCRIPT","slug":"JAVASCRIPT","permalink":"http://yoursite.com/tags/JAVASCRIPT/"},{"name":"알고리즘","slug":"알고리즘","permalink":"http://yoursite.com/tags/알고리즘/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/tags/Algorithm/"}]}]}